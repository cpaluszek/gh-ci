name: Go CI Pipeline

on:
  push:
  pull_request:

jobs:
  lint:
    name: Lint
    runs-on: Ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: v2.0

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Install dependencies
        run: go get ./...

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

  build:
    name: Build
    needs: [lint, test]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest]
        include:
          - os: ubuntu-latest
            artifact_name: pipeye
            asset_name: pipeye-linux-amd64

    steps:
      - uses: actions/checkout@v3
 
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
 
      - name: Build
        run: go build -v -o ${{ matrix.artifact_name }} ./cmd/pipeye
 
      - name: Archive binary
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.asset_name }}
          path: ${{ matrix.artifact_name }}

